#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <3>;
    scroll-layers = <5>;

    arrows {
        layers = <4>;
        bindings =
            <&kp RIGHT_ARROW>,
            <&kp LEFT_ARROW>,
            <&kp UP_ARROW>,
            <&kp DOWN_ARROW>;

        tick = <40>;
        wait-ms = <5>;
        tap-ms = <5>;
    };

    control {
        layers = <6>;
        bindings =
            <&kp LC(RIGHT_ARROW)>,
            <&kp LC(LEFT_ARROW)>,
            <&kp LC(LEFT_ARROW)>,
            <&kp LC(RIGHT_ARROW)>;

        tick = <60>;
        wait-ms = <5>;
        tap-ms = <5>;
    };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        loginm: loginm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 2000>,
                <&kp LC(LA(DEL))>,
                <&macro_wait_time 0>,
                <&kp N3 &kp N0 &kp N8 &kp N2 &kp LEFT_BRACKET &kp M &kp T &kp H &kp S &kp M &kp S &kp H &kp R &kp ENTER>;

            label = "LOGINM";
        };

        kigo: kigo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp N &kp SPACE>;
            label = "KIGO";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp P &kp E &kp SPACE>;
            label = "KAKKO";
        };

        enzan: enzan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp R &kp E &kp SPACE>;
            label = "ENZAN";
        };

        atesaki: atesaki {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp W &kp E &kp SPACE>;
            label = "ATESAKI";
        };

        string: string {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp Q &kp A &kp SPACE>;
            label = "STRING";
        };

        win6: atab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 6 &kp LWIN>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 6 &kp LWIN>;

            label = "ATAB";
        };

        num1: num1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp INT_MUHENKAN>,
                <&macro_press>,
                <&mo 1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_tap>,
                <&kp INT_HENKAN>;

            label = "NUM1";
        };

        eisu: eisu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp INT_MUHENKAN>,
                <&macro_pause_for_release>,
                <&kp INTERNATIONAL_4>;

            label = "EISU";
        };

        mailpath: path {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp M &kp E &kp MINUS &kp R &kp U &kp P &kp A &kp S &kp U &kp SPACE>;
            label = "PATH";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        winl6: winl6 {
            compatible = "zmk,behavior-hold-tap";
            label = "WINL6";
            bindings = <&win6>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
        };

        l1: l1 {
            compatible = "zmk,behavior-hold-tap";
            label = "L1";
            bindings = <&num1>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
        };

        hold_eisu: hold_eisu {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_EISU";
            bindings = <&eisu>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                    &kp W          &kp E          &kp R           &kp T                                                               &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A                    &kp S          &kp D          &kp F           &kp G                   &kp LG(LS(S))           &mt RIGHT_ALT HOME  &kp H        &kp J  &kp K      &lt 4 L  &lt 5 MINUS
&mt LEFT_SHIFT Z         &kp X          &kp C          &kp V           &kp B                   &mkp MB1                &mt RIGHT_GUI END   &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&hold_eisu 0 INT_HENKAN  &kp LG(LC(V))  &kp LC(LS(N))  &winl6 0 LC(C)  &mt LEFT_CONTROL SPACE  &mt LEFT_SHIFT TAB      &kp BACKSPACE       &l1 0 ENTER                             &loginm
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        FUNCTION {
            bindings = <
&kp F10  &kp F5    &kp F4  &kp F2           &trans                               &enzan      &kp KP_N7        &kp KP_N8        &kp KP_N9        &trans
&string  &atesaki  &kakko  &kigo            &mailpath  &trans        &kp DELETE  &kp KP_DOT  &kp KP_N4        &kp KP_N5        &kp KP_N6        &kp SQT
&trans   &trans    &trans  &trans           &trans     &mkp MB2      &kp ESC     &kp KP_N0   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SLASH
&trans   &trans    &trans  &mt LG(V) LC(V)  &trans     &trans        &trans      &trans                                                         &kp KP_NUMLOCK
            >;

            sensor-bindings = <&inc_dec_kp LC(SEMICOLON) LC(MINUS)>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_CONTROL  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        layer_6 {
            bindings = <
&trans     &trans    &kp UP_ARROW    &trans     &trans                        &trans     &trans  &trans  &trans  &trans
&kp LC(D)  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp TAB  &trans      &kp DEL  &trans     &trans  &trans  &trans  &trans
&trans     &trans    &trans          &trans     &trans   &trans      &kp ESC  &trans     &trans  &trans  &trans  &trans
&trans     &trans    &trans          &trans     &trans   &trans      &kp TAB  &kp LC(D)                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(RIGHT) LC(LEFT_ARROW)>;
        };
    };
};
